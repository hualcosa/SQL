/*
Hacker News is a popular website run by Y Combinator. Itâ€™s widely known by people in the tech industry as a community site for sharing news, showing off projects, asking questions, among other things.

In this project, you will be working with a table named hacker_news that contains stories from Hacker News since its launch in 2007. It has the following columns:

title - the title of the story
user - the user who submitted the story
score - the score of the story
timestamp - the time of the story
url - the link of the story
This data was kindly made publicly available under the MIT license.
*/

/* Returns the five more popular titles */
SELECT title, score
FROM hacker_news
ORDER BY score DESC
LIMIT 5;

/* Calculate the total score of all stories */
SELECT SUM(score) AS 'Total score'
FROM hacker_news;

/* Find users that have gotten combined scores more than 200 */
SELECT user, SUM(score)
FROM hacker_news
GROUP BY user
HAVING SUM(score) > 200
ORDER BY 2 DESC;

/* Get the percentage of scores that are made by these users */
SELECT (517 + 309 + 304 + 282)/6366.0;

/* Discover users that are rickrolling */
SELECT user, COUNT(url) AS 'Rickrollers'
FROM hacker_news
WHERE url = 'https://www.youtube.com/watch?v=dQw4w9WgXcQ'
GROUP BY 1
ORDER BY 2 DESC;

/* Categorize each story based on their source */
SELECT CASE
  WHEN url LIKE '%github.com%' THEN 'GitHub'
  WHEN url LIKE '%medium.com%' THEN 'Medium'
  WHEN url LIKE '%nytimes.com%' THEN 'New York Times'
  ELSE 'Other'
 END AS 'Source',
 COUNT(*)
FROM hacker_news
GROUP BY 1;

/* Take a look  at the timestamp column */
SELECT strftime('%H', timestamp) AS 'Hour',
 ROUND(AVG(score)) AS 'Score',
 COUNT(*) AS 'Number of stories'
FROM hacker_news
WHERE timestamp IS NOT NULL
GROUP BY 1
ORDER BY 3 DESC;
